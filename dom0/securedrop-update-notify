#!/usr/bin/env python3

"""
Displays a warning to the user if the workstation has been running
continuously for more than 5 days.
"""

from datetime import datetime
import fcntl
import logging
import os
import sys
from PyQt4 import QtGui
from PyQt4.QtGui import QMessageBox

sdlog = logging.getLogger(__name__)


# This will create a lock file in /run, which is a temporary filesystem that
# does not persist upon reboots
LOCK_FILE = "/run/lock/securedrop-update-notify.lock"

lf = open(LOCK_FILE, 'w')
try:
    # Obtain an exclusive, nonblocking lock
    fcntl.lockf(lf, fcntl.LOCK_EX | fcntl.LOCK_NB)
except IOError:
    sdlog.error('Error obtaining lock on ' + LOCK_FILE +
        '\nNotification may already be displaying. Exiting.')
    sys.exit(0)

def show_update_notification():
    application = QtGui.QApplication(sys.argv)
    QMessageBox.warning(None, 'Security check recommended',
        'The workstation has been running continuously for a long time. '
        'We recommend that you launch or restart the SecureDrop app to '
        'check for security updates.',
                        QMessageBox.Ok,
                        QMessageBox.Ok)


LAST_UPDATED = os.path.join(os.path.expanduser("~"), 
                 ".securedrop_launcher/sdw-last-updated")
# Get for timestamp from last update 
if os.path.exists(LAST_UPDATED):
    with open(LAST_UPDATED, 'r') as f:
        last_update_time = f.readline().splitlines()[0]
        last_update_time = datetime.strptime(last_update_time, "%Y-%m-%d %H:%M:%S")
        now = datetime.now()
        update_time_diff = abs((last_update_time-now).total_seconds())


# Set uptime values: threshold and current 
uptime_threshold = 432000  # 432000 seconds = 5 days
with open('/proc/uptime', 'r') as f:
    uptime_seconds = float(f.readline().split()[0])

# main logic
if not os.path.exists(LAST_UPDATED) and uptime_seconds > uptime_threshold:
    show_update_notification()
if os.path.exists(LAST_UPDATED) and update_time_diff > uptime_threshold:
    print("update")
