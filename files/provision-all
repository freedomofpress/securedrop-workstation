#!/usr/bin/bash
# Create and configure all SecureDrop Workstation VMs.
set -e
set -u
set -o pipefail


# The max concurrency reduction (4->2) was required to avoid "did not return clean data"
# errors from qubesctl. It may be possible to raise this again.
max_concurrency="2"

echo "Configure Fedora-based system VMs"
sudo qubesctl --show-output state.sls securedrop_salt.sd-sys-vms

echo ".........................................................................."
echo "Configure base template"
sudo qubesctl --show-output state.sls securedrop_salt.sd-base-template
sudo qubesctl --show-output --skip-dom0 --targets sd-base-bookworm-template state.highstate
qvm-shutdown --wait sd-base-bookworm-template


# Running only against dom0, to ensure the VMs are created (but not yet configured)
echo ".........................................................................."
echo "Set up dom0 config files, including RPC policies, and create VMs"
sudo qubesctl --show-output state.highstate

echo ".........................................................................."
echo "Set up logging VMs early"
sudo qubesctl --show-output --skip-dom0 --targets sd-small-bookworm-template state.highstate

# Reboot sd-log so it's ready to receive logs from other VMs about to be configured
qvm-shutdown --wait sd-log && qvm-start sd-log

echo ".........................................................................."
echo "Enabling Whonix customizations"
sudo qubesctl --show-output --skip-dom0 --targets whonix-gateway-17 state.highstate

# Format list of all VMs comma-separated, for use as qubesctl target
# We run this after dom0's highstate, so that the VMs are available for listing by tag.
all_sdw_vms_target="$(qvm-ls --tags sd-workstation --raw-list | perl -npE 's/\n/,/g' | perl -npE 's/,$//' )"

# We skip dom0 in the task below, since dom0 highstate was enforced in the previous command.
echo ".........................................................................."
echo "Provision all SecureDrop Workstation VMs with service-specific configs"
sudo qubesctl --show-output --max-concurrency "$max_concurrency" --skip-dom0 --targets "$all_sdw_vms_target" state.highstate

# Sync appmenus now that all packages are installed
# TODO: this should be done by salt or debs, but we do it manually here because it's
# not straightforward to run a dom0 salt state after VMs run.
# n.b. none of the small VMs are shown in the menu on prod, but nice to have it synced
qvm-start --skip-if-running sd-small-bookworm-template && qvm-sync-appmenus sd-small-bookworm-template \
  && qvm-shutdown sd-small-bookworm-template
qvm-start --skip-if-running sd-large-bookworm-template && qvm-sync-appmenus sd-large-bookworm-template \
  && qvm-shutdown sd-large-bookworm-template
qvm-start --skip-if-running whonix-gateway-17 && qvm-sync-appmenus whonix-gateway-17 \
  && qvm-shutdown whonix-gateway-17
# These are the two ones we show in prod VMs, so sync explicitly
qvm-sync-appmenus --regenerate-only sd-devices
qvm-sync-appmenus --regenerate-only sd-whonix

echo ".........................................................................."
echo "Add SecureDrop export device handling to sys-usb"
# If sd-fedora-40-dvm exists it's because salt determined that sys-usb was disposable
# shellcheck disable=SC2015
qvm-check --quiet sd-fedora-40-dvm 2> /dev/null && \
  sudo qubesctl --show-output --skip-dom0 --targets sd-fedora-40-dvm state.highstate && \
  qvm-shutdown --wait sys-usb && qvm-start sys-usb || \
  sudo qubesctl --show-output --skip-dom0 --targets sys-usb state.highstate

# Shut down all VMs to ensure new configuration takes place, if the user doesn't reboot.
echo "will shut down the following VMs"
qvm-ls --tags sd-workstation
qvm-ls --tags sd-workstation --raw-list | xargs qvm-shutdown --wait
qvm-shutdown --wait whonix-gateway-17
